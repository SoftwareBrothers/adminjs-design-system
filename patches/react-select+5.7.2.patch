diff --git a/node_modules/react-select/async/dist/react-select-async.cjs.d.ts b/node_modules/react-select/async/dist/react-select-async.cjs.d.ts
index ec9574d..caff711 100644
--- a/node_modules/react-select/async/dist/react-select-async.cjs.d.ts
+++ b/node_modules/react-select/async/dist/react-select-async.cjs.d.ts
@@ -1,2 +1,2 @@
-export * from "../../dist/declarations/src/async/index";
-export { default } from "../../dist/declarations/src/async/index";
+export * from "../../dist/declarations/src/async/index.js";
+export { default } from "../../dist/declarations/src/async/index.js";
diff --git a/node_modules/react-select/async/package.json b/node_modules/react-select/async/package.json
index b58d5d1..f2ef1f0 100644
--- a/node_modules/react-select/async/package.json
+++ b/node_modules/react-select/async/package.json
@@ -1,5 +1,6 @@
 {
   "main": "dist/react-select-async.cjs.js",
   "module": "dist/react-select-async.esm.js",
-  "types": "dist/react-select-async.cjs.d.ts"
+  "types": "dist/react-select-async.cjs.d.ts",
+  "type": "module"
 }
diff --git a/node_modules/react-select/base/package.json b/node_modules/react-select/base/package.json
index 957568d..c0b1107 100644
--- a/node_modules/react-select/base/package.json
+++ b/node_modules/react-select/base/package.json
@@ -1,5 +1,6 @@
 {
   "main": "dist/react-select-base.cjs.js",
   "module": "dist/react-select-base.esm.js",
-  "types": "dist/react-select-base.cjs.d.ts"
+  "types": "dist/react-select-base.cjs.d.ts",
+  "type": "module"
 }
diff --git a/node_modules/react-select/dist/declarations/src/Async.d.ts b/node_modules/react-select/dist/declarations/src/Async.d.ts
index 68766ca..d4a7a20 100644
--- a/node_modules/react-select/dist/declarations/src/Async.d.ts
+++ b/node_modules/react-select/dist/declarations/src/Async.d.ts
@@ -1,8 +1,8 @@
 import { ReactElement, RefAttributes } from 'react';
-import Select from './Select';
-import { GroupBase } from './types';
-import useAsync from './useAsync';
-import type { AsyncProps } from './useAsync';
+import Select from './Select.js';
+import { GroupBase } from './types.js';
+import useAsync from './useAsync.js';
+import type { AsyncProps } from './useAsync.js';
 export type { AsyncProps };
 declare type AsyncSelect = <Option = unknown, IsMulti extends boolean = false, Group extends GroupBase<Option> = GroupBase<Option>>(props: AsyncProps<Option, IsMulti, Group> & RefAttributes<Select<Option, IsMulti, Group>>) => ReactElement;
 declare const AsyncSelect: AsyncSelect;
diff --git a/node_modules/react-select/dist/declarations/src/AsyncCreatable.d.ts b/node_modules/react-select/dist/declarations/src/AsyncCreatable.d.ts
index f55c3c1..8e686cb 100644
--- a/node_modules/react-select/dist/declarations/src/AsyncCreatable.d.ts
+++ b/node_modules/react-select/dist/declarations/src/AsyncCreatable.d.ts
@@ -1,9 +1,9 @@
 import { ReactElement, RefAttributes } from 'react';
-import Select from './Select';
-import { GroupBase } from './types';
-import { AsyncAdditionalProps } from './useAsync';
-import { StateManagerProps } from './useStateManager';
-import { CreatableAdditionalProps } from './useCreatable';
+import Select from './Select.js';
+import { GroupBase } from './types.js';
+import { AsyncAdditionalProps } from './useAsync.js';
+import { StateManagerProps } from './useStateManager.js';
+import { CreatableAdditionalProps } from './useCreatable.js';
 export declare type AsyncCreatableProps<Option, IsMulti extends boolean, Group extends GroupBase<Option>> = StateManagerProps<Option, IsMulti, Group> & CreatableAdditionalProps<Option, Group> & AsyncAdditionalProps<Option, Group>;
 declare type AsyncCreatableSelect = <Option = unknown, IsMulti extends boolean = false, Group extends GroupBase<Option> = GroupBase<Option>>(props: AsyncCreatableProps<Option, IsMulti, Group> & RefAttributes<Select<Option, IsMulti, Group>>) => ReactElement;
 declare const AsyncCreatableSelect: AsyncCreatableSelect;
diff --git a/node_modules/react-select/dist/declarations/src/Creatable.d.ts b/node_modules/react-select/dist/declarations/src/Creatable.d.ts
index fb1eb48..a6e2bfb 100644
--- a/node_modules/react-select/dist/declarations/src/Creatable.d.ts
+++ b/node_modules/react-select/dist/declarations/src/Creatable.d.ts
@@ -1,8 +1,8 @@
 import { ReactElement, RefAttributes } from 'react';
-import Select from './Select';
-import { GroupBase } from './types';
-import { StateManagerProps } from './useStateManager';
-import useCreatable, { CreatableAdditionalProps } from './useCreatable';
+import Select from './Select.js';
+import { GroupBase } from './types.js';
+import { StateManagerProps } from './useStateManager.js';
+import useCreatable, { CreatableAdditionalProps } from './useCreatable.js';
 export declare type CreatableProps<Option, IsMulti extends boolean, Group extends GroupBase<Option>> = StateManagerProps<Option, IsMulti, Group> & CreatableAdditionalProps<Option, Group>;
 declare type CreatableSelect = <Option = unknown, IsMulti extends boolean = false, Group extends GroupBase<Option> = GroupBase<Option>>(props: CreatableProps<Option, IsMulti, Group> & RefAttributes<Select<Option, IsMulti, Group>>) => ReactElement;
 declare const CreatableSelect: CreatableSelect;
diff --git a/node_modules/react-select/dist/declarations/src/Select.d.ts b/node_modules/react-select/dist/declarations/src/Select.d.ts
index 49b19de..398a017 100644
--- a/node_modules/react-select/dist/declarations/src/Select.d.ts
+++ b/node_modules/react-select/dist/declarations/src/Select.d.ts
@@ -1,11 +1,11 @@
 import * as React from 'react';
 import { AriaAttributes, Component, FocusEventHandler, FormEventHandler, KeyboardEventHandler, MouseEventHandler, ReactNode, RefCallback, TouchEventHandler } from 'react';
-import { FilterOptionOption } from './filters';
-import { AriaLiveMessages, AriaSelection } from './accessibility/index';
-import { SelectComponentsConfig } from './components/index';
-import { ClassNamesConfig, StylesConfig, StylesProps } from './styles';
-import { ThemeConfig } from './theme';
-import { ActionMeta, FocusDirection, GetOptionLabel, GetOptionValue, GroupBase, InputActionMeta, MenuPlacement, MenuPosition, OnChangeValue, Options, OptionsOrGroups, PropsValue, SetValueAction } from './types';
+import { FilterOptionOption } from './filters.js';
+import { AriaLiveMessages, AriaSelection } from './accessibility/index.js';
+import { SelectComponentsConfig } from './components/index.js';
+import { ClassNamesConfig, StylesConfig, StylesProps } from './styles.js';
+import { ThemeConfig } from './theme.js';
+import { ActionMeta, FocusDirection, GetOptionLabel, GetOptionValue, GroupBase, InputActionMeta, MenuPlacement, MenuPosition, OnChangeValue, Options, OptionsOrGroups, PropsValue, SetValueAction } from './types.js';
 export declare type FormatOptionLabelContext = 'menu' | 'value';
 export interface FormatOptionLabelMeta<Option> {
     context: FormatOptionLabelContext;
diff --git a/node_modules/react-select/dist/declarations/src/accessibility/index.d.ts b/node_modules/react-select/dist/declarations/src/accessibility/index.d.ts
index 125bc30..d7cf354 100644
--- a/node_modules/react-select/dist/declarations/src/accessibility/index.d.ts
+++ b/node_modules/react-select/dist/declarations/src/accessibility/index.d.ts
@@ -1,5 +1,5 @@
 import type { AriaAttributes } from 'react';
-import { ActionMeta, GroupBase, InitialInputFocusedActionMeta, OnChangeValue, Options, OptionsOrGroups } from '../types';
+import { ActionMeta, GroupBase, InitialInputFocusedActionMeta, OnChangeValue, Options, OptionsOrGroups } from '../types.js';
 export declare type OptionContext = 'menu' | 'value';
 export declare type GuidanceContext = 'menu' | 'input' | 'value';
 export declare type AriaSelection<Option, IsMulti extends boolean> = InitialInputFocusedActionMeta<Option, IsMulti> | (ActionMeta<Option> & {
diff --git a/node_modules/react-select/dist/declarations/src/animated/Input.d.ts b/node_modules/react-select/dist/declarations/src/animated/Input.d.ts
index 2bc83f9..0d8e6c8 100644
--- a/node_modules/react-select/dist/declarations/src/animated/Input.d.ts
+++ b/node_modules/react-select/dist/declarations/src/animated/Input.d.ts
@@ -1,7 +1,7 @@
 import { ReactElement } from 'react';
 import { TransitionProps } from 'react-transition-group/Transition';
-import { InputProps } from '../components/Input';
-import { GroupBase } from '../types';
+import { InputProps } from '../components/Input.js';
+import { GroupBase } from '../types.js';
 export declare type InputComponent = <Option, IsMulti extends boolean, Group extends GroupBase<Option>>(props: InputProps<Option, IsMulti, Group>) => ReactElement;
 export declare type AnimatedInputProps<Option, IsMulti extends boolean, Group extends GroupBase<Option>> = InputProps<Option, IsMulti, Group> & Partial<TransitionProps>;
 declare const AnimatedInput: (WrappedComponent: InputComponent) => InputComponent;
diff --git a/node_modules/react-select/dist/declarations/src/animated/MultiValue.d.ts b/node_modules/react-select/dist/declarations/src/animated/MultiValue.d.ts
index aec02b9..fb965eb 100644
--- a/node_modules/react-select/dist/declarations/src/animated/MultiValue.d.ts
+++ b/node_modules/react-select/dist/declarations/src/animated/MultiValue.d.ts
@@ -1,7 +1,7 @@
 import { ReactElement } from 'react';
 import { TransitionProps } from 'react-transition-group/Transition';
-import { MultiValueProps } from '../components/MultiValue';
-import { GroupBase } from '../types';
+import { MultiValueProps } from '../components/MultiValue.js';
+import { GroupBase } from '../types.js';
 export declare type MultiValueComponent = <Option, IsMulti extends boolean, Group extends GroupBase<Option>>(props: MultiValueProps<Option, IsMulti, Group>) => ReactElement;
 export declare type AnimatedMultiValueProps<Option, IsMulti extends boolean, Group extends GroupBase<Option>> = MultiValueProps<Option, IsMulti, Group> & Partial<TransitionProps>;
 declare const AnimatedMultiValue: (WrappedComponent: MultiValueComponent) => <Option, IsMulti extends boolean, Group extends GroupBase<Option>>({ in: inProp, onExited, ...props }: AnimatedMultiValueProps<Option, IsMulti, Group>) => JSX.Element;
diff --git a/node_modules/react-select/dist/declarations/src/animated/Placeholder.d.ts b/node_modules/react-select/dist/declarations/src/animated/Placeholder.d.ts
index 0e5dc90..35f61d0 100644
--- a/node_modules/react-select/dist/declarations/src/animated/Placeholder.d.ts
+++ b/node_modules/react-select/dist/declarations/src/animated/Placeholder.d.ts
@@ -1,6 +1,6 @@
 import { ReactElement } from 'react';
-import { PlaceholderProps } from '../components/Placeholder';
-import { GroupBase } from '../types';
+import { PlaceholderProps } from '../components/Placeholder.js';
+import { GroupBase } from '../types.js';
 export declare type PlaceholderComponent = <Option, IsMulti extends boolean, Group extends GroupBase<Option>>(props: PlaceholderProps<Option, IsMulti, Group>) => ReactElement;
 declare const AnimatedPlaceholder: (WrappedComponent: PlaceholderComponent) => <Option, IsMulti extends boolean, Group extends GroupBase<Option>>(props: PlaceholderProps<Option, IsMulti, Group>) => JSX.Element;
 export default AnimatedPlaceholder;
diff --git a/node_modules/react-select/dist/declarations/src/animated/SingleValue.d.ts b/node_modules/react-select/dist/declarations/src/animated/SingleValue.d.ts
index 4515e4e..729b177 100644
--- a/node_modules/react-select/dist/declarations/src/animated/SingleValue.d.ts
+++ b/node_modules/react-select/dist/declarations/src/animated/SingleValue.d.ts
@@ -1,6 +1,6 @@
 import { ReactElement } from 'react';
-import { SingleValueProps } from '../components/SingleValue';
-import { GroupBase } from '../types';
+import { SingleValueProps } from '../components/SingleValue.js';
+import { GroupBase } from '../types.js';
 export declare type SingleValueComponent = <Option, IsMulti extends boolean, Group extends GroupBase<Option>>(props: SingleValueProps<Option, IsMulti, Group>) => ReactElement;
 declare const AnimatedSingleValue: (WrappedComponent: SingleValueComponent) => <Option, IsMulti extends boolean, Group extends GroupBase<Option>>(props: SingleValueProps<Option, IsMulti, Group>) => JSX.Element;
 export default AnimatedSingleValue;
diff --git a/node_modules/react-select/dist/declarations/src/animated/ValueContainer.d.ts b/node_modules/react-select/dist/declarations/src/animated/ValueContainer.d.ts
index e7f9c09..21533ff 100644
--- a/node_modules/react-select/dist/declarations/src/animated/ValueContainer.d.ts
+++ b/node_modules/react-select/dist/declarations/src/animated/ValueContainer.d.ts
@@ -1,6 +1,6 @@
 import { ReactElement } from 'react';
-import { ValueContainerProps } from '../components/containers';
-import { GroupBase } from '../types';
+import { ValueContainerProps } from '../components/containers.js';
+import { GroupBase } from '../types.js';
 export declare type ValueContainerComponent = <Option, IsMulti extends boolean, Group extends GroupBase<Option>>(props: ValueContainerProps<Option, IsMulti, Group>) => ReactElement;
 declare const AnimatedValueContainer: (WrappedComponent: ValueContainerComponent) => <Option, IsMulti extends boolean, Group extends GroupBase<Option>>(props: ValueContainerProps<Option, IsMulti, Group>) => JSX.Element;
 export default AnimatedValueContainer;
diff --git a/node_modules/react-select/dist/declarations/src/async-creatable/index.d.ts b/node_modules/react-select/dist/declarations/src/async-creatable/index.d.ts
index 76ef9d9..652ca47 100644
--- a/node_modules/react-select/dist/declarations/src/async-creatable/index.d.ts
+++ b/node_modules/react-select/dist/declarations/src/async-creatable/index.d.ts
@@ -1,2 +1,2 @@
-export * from '../AsyncCreatable';
-export { default } from '../AsyncCreatable';
+export * from '../AsyncCreatable.js';
+export { default } from '../AsyncCreatable.js';
diff --git a/node_modules/react-select/dist/declarations/src/async/index.d.ts b/node_modules/react-select/dist/declarations/src/async/index.d.ts
index 260c255..6c998db 100644
--- a/node_modules/react-select/dist/declarations/src/async/index.d.ts
+++ b/node_modules/react-select/dist/declarations/src/async/index.d.ts
@@ -1,2 +1,2 @@
-export * from '../Async';
-export { default } from '../Async';
+export * from '../Async.js';
+export { default } from '../Async.js';
diff --git a/node_modules/react-select/dist/declarations/src/base/index.d.ts b/node_modules/react-select/dist/declarations/src/base/index.d.ts
index 7192f7d..15b5034 100644
--- a/node_modules/react-select/dist/declarations/src/base/index.d.ts
+++ b/node_modules/react-select/dist/declarations/src/base/index.d.ts
@@ -1,2 +1,2 @@
-export * from '../Select';
-export { default } from '../Select';
+export * from '../Select.js';
+export { default } from '../Select.js';
diff --git a/node_modules/react-select/dist/declarations/src/builtins.d.ts b/node_modules/react-select/dist/declarations/src/builtins.d.ts
index 041b53f..b16c203 100644
--- a/node_modules/react-select/dist/declarations/src/builtins.d.ts
+++ b/node_modules/react-select/dist/declarations/src/builtins.d.ts
@@ -1,4 +1,4 @@
-import { GroupBase } from './types';
+import { GroupBase } from './types.js';
 export declare const formatGroupLabel: <Option, Group extends GroupBase<Option>>(group: Group) => string;
 export declare const getOptionLabel: <Option>(option: Option) => string;
 export declare const getOptionValue: <Option>(option: Option) => string;
diff --git a/node_modules/react-select/dist/declarations/src/components/Control.d.ts b/node_modules/react-select/dist/declarations/src/components/Control.d.ts
index bb36157..3128586 100644
--- a/node_modules/react-select/dist/declarations/src/components/Control.d.ts
+++ b/node_modules/react-select/dist/declarations/src/components/Control.d.ts
@@ -1,7 +1,7 @@
 /** @jsx jsx */
 import { ReactNode, Ref } from 'react';
 import { jsx } from '@emotion/react';
-import { CommonPropsAndClassName, CSSObjectWithLabel, GroupBase } from '../types';
+import { CommonPropsAndClassName, CSSObjectWithLabel, GroupBase } from '../types.js';
 export interface ControlProps<Option = unknown, IsMulti extends boolean = boolean, Group extends GroupBase<Option> = GroupBase<Option>> extends CommonPropsAndClassName<Option, IsMulti, Group> {
     /** Children to render. */
     children: ReactNode;
diff --git a/node_modules/react-select/dist/declarations/src/components/Group.d.ts b/node_modules/react-select/dist/declarations/src/components/Group.d.ts
index 2b75775..55903ae 100644
--- a/node_modules/react-select/dist/declarations/src/components/Group.d.ts
+++ b/node_modules/react-select/dist/declarations/src/components/Group.d.ts
@@ -1,8 +1,8 @@
 /** @jsx jsx */
 import { ComponentType, ReactNode } from 'react';
 import { jsx } from '@emotion/react';
-import { CommonProps, CommonPropsAndClassName, CSSObjectWithLabel, CX, GetStyles, GroupBase, Options, Theme } from '../types';
-import { Props } from '../Select';
+import { CommonProps, CommonPropsAndClassName, CSSObjectWithLabel, CX, GetStyles, GroupBase, Options, Theme } from '../types.js';
+import { Props } from '../Select.js';
 export interface ForwardedHeadingProps<Option, Group extends GroupBase<Option>> {
     id: string;
     data: Group;
diff --git a/node_modules/react-select/dist/declarations/src/components/Input.d.ts b/node_modules/react-select/dist/declarations/src/components/Input.d.ts
index e5f6741..74c074b 100644
--- a/node_modules/react-select/dist/declarations/src/components/Input.d.ts
+++ b/node_modules/react-select/dist/declarations/src/components/Input.d.ts
@@ -1,7 +1,7 @@
 /** @jsx jsx */
 import { InputHTMLAttributes } from 'react';
 import { jsx } from '@emotion/react';
-import { CommonPropsAndClassName, CSSObjectWithLabel, GroupBase } from '../types';
+import { CommonPropsAndClassName, CSSObjectWithLabel, GroupBase } from '../types.js';
 export interface InputSpecificProps<Option = unknown, IsMulti extends boolean = boolean, Group extends GroupBase<Option> = GroupBase<Option>> extends InputHTMLAttributes<HTMLInputElement>, CommonPropsAndClassName<Option, IsMulti, Group> {
     /** Reference to the internal element */
     innerRef?: (instance: HTMLInputElement | null) => void;
diff --git a/node_modules/react-select/dist/declarations/src/components/LiveRegion.d.ts b/node_modules/react-select/dist/declarations/src/components/LiveRegion.d.ts
index b9703cf..1835de2 100644
--- a/node_modules/react-select/dist/declarations/src/components/LiveRegion.d.ts
+++ b/node_modules/react-select/dist/declarations/src/components/LiveRegion.d.ts
@@ -1,8 +1,8 @@
 /** @jsx jsx */
 import { ReactNode } from 'react';
 import { jsx } from '@emotion/react';
-import { AriaSelection } from '../accessibility';
-import { CommonProps, GroupBase, Options } from '../types';
+import { AriaSelection } from '../accessibility/index.js';
+import { CommonProps, GroupBase, Options } from '../types.js';
 export interface LiveRegionProps<Option, IsMulti extends boolean, Group extends GroupBase<Option>> extends CommonProps<Option, IsMulti, Group> {
     children: ReactNode;
     innerProps: {
diff --git a/node_modules/react-select/dist/declarations/src/components/Menu.d.ts b/node_modules/react-select/dist/declarations/src/components/Menu.d.ts
index af73015..3f54bfa 100644
--- a/node_modules/react-select/dist/declarations/src/components/Menu.d.ts
+++ b/node_modules/react-select/dist/declarations/src/components/Menu.d.ts
@@ -1,7 +1,7 @@
 /** @jsx jsx */
 import { ReactElement, ReactNode, Ref } from 'react';
 import { jsx } from '@emotion/react';
-import { MenuPlacement, MenuPosition, CommonProps, GroupBase, CommonPropsAndClassName, CoercedMenuPlacement, CSSObjectWithLabel } from '../types';
+import { MenuPlacement, MenuPosition, CommonProps, GroupBase, CommonPropsAndClassName, CoercedMenuPlacement, CSSObjectWithLabel } from '../types.js';
 interface CalculatedMenuPlacementAndHeight {
     placement: CoercedMenuPlacement;
     maxHeight: number;
diff --git a/node_modules/react-select/dist/declarations/src/components/MultiValue.d.ts b/node_modules/react-select/dist/declarations/src/components/MultiValue.d.ts
index dbdefce..e08c789 100644
--- a/node_modules/react-select/dist/declarations/src/components/MultiValue.d.ts
+++ b/node_modules/react-select/dist/declarations/src/components/MultiValue.d.ts
@@ -1,8 +1,8 @@
 /** @jsx jsx */
 import { ComponentType, ReactNode } from 'react';
 import { jsx } from '@emotion/react';
-import { CommonPropsAndClassName, CSSObjectWithLabel, GroupBase } from '../types';
-import { Props } from '../Select';
+import { CommonPropsAndClassName, CSSObjectWithLabel, GroupBase } from '../types.js';
+import { Props } from '../Select.js';
 interface MultiValueComponents<Option, IsMulti extends boolean, Group extends GroupBase<Option>> {
     Container: ComponentType<MultiValueGenericProps<Option, IsMulti, Group>>;
     Label: ComponentType<MultiValueGenericProps<Option, IsMulti, Group>>;
diff --git a/node_modules/react-select/dist/declarations/src/components/Option.d.ts b/node_modules/react-select/dist/declarations/src/components/Option.d.ts
index 79b79be..693d037 100644
--- a/node_modules/react-select/dist/declarations/src/components/Option.d.ts
+++ b/node_modules/react-select/dist/declarations/src/components/Option.d.ts
@@ -1,7 +1,7 @@
 /** @jsx jsx */
 import { ReactNode, RefCallback } from 'react';
 import { jsx } from '@emotion/react';
-import { CommonPropsAndClassName, CSSObjectWithLabel, GroupBase } from '../types';
+import { CommonPropsAndClassName, CSSObjectWithLabel, GroupBase } from '../types.js';
 export interface OptionProps<Option = unknown, IsMulti extends boolean = boolean, Group extends GroupBase<Option> = GroupBase<Option>> extends CommonPropsAndClassName<Option, IsMulti, Group> {
     /** The children to be rendered. */
     children: ReactNode;
diff --git a/node_modules/react-select/dist/declarations/src/components/Placeholder.d.ts b/node_modules/react-select/dist/declarations/src/components/Placeholder.d.ts
index 141f9ab..7a8e8dc 100644
--- a/node_modules/react-select/dist/declarations/src/components/Placeholder.d.ts
+++ b/node_modules/react-select/dist/declarations/src/components/Placeholder.d.ts
@@ -1,7 +1,7 @@
 /** @jsx jsx */
 import { ReactNode } from 'react';
 import { jsx } from '@emotion/react';
-import { CommonPropsAndClassName, CSSObjectWithLabel, GroupBase } from '../types';
+import { CommonPropsAndClassName, CSSObjectWithLabel, GroupBase } from '../types.js';
 export interface PlaceholderProps<Option = unknown, IsMulti extends boolean = boolean, Group extends GroupBase<Option> = GroupBase<Option>> extends CommonPropsAndClassName<Option, IsMulti, Group> {
     /** The children to be rendered. */
     children: ReactNode;
diff --git a/node_modules/react-select/dist/declarations/src/components/SingleValue.d.ts b/node_modules/react-select/dist/declarations/src/components/SingleValue.d.ts
index 46c7269..0f58b98 100644
--- a/node_modules/react-select/dist/declarations/src/components/SingleValue.d.ts
+++ b/node_modules/react-select/dist/declarations/src/components/SingleValue.d.ts
@@ -1,7 +1,7 @@
 /** @jsx jsx */
 import { ReactNode } from 'react';
 import { jsx } from '@emotion/react';
-import { CommonPropsAndClassName, CSSObjectWithLabel, GroupBase } from '../types';
+import { CommonPropsAndClassName, CSSObjectWithLabel, GroupBase } from '../types.js';
 export interface SingleValueProps<Option = unknown, IsMulti extends boolean = boolean, Group extends GroupBase<Option> = GroupBase<Option>> extends CommonPropsAndClassName<Option, IsMulti, Group> {
     /** The children to be rendered. */
     children: ReactNode;
diff --git a/node_modules/react-select/dist/declarations/src/components/containers.d.ts b/node_modules/react-select/dist/declarations/src/components/containers.d.ts
index 1198f8e..36235d6 100644
--- a/node_modules/react-select/dist/declarations/src/components/containers.d.ts
+++ b/node_modules/react-select/dist/declarations/src/components/containers.d.ts
@@ -1,7 +1,7 @@
 /** @jsx jsx */
 import { ReactNode } from 'react';
 import { jsx } from '@emotion/react';
-import { CommonPropsAndClassName, CSSObjectWithLabel, GroupBase } from '../types';
+import { CommonPropsAndClassName, CSSObjectWithLabel, GroupBase } from '../types.js';
 export interface ContainerProps<Option = unknown, IsMulti extends boolean = boolean, Group extends GroupBase<Option> = GroupBase<Option>> extends CommonPropsAndClassName<Option, IsMulti, Group> {
     /** Whether the select is disabled. */
     isDisabled: boolean;
diff --git a/node_modules/react-select/dist/declarations/src/components/index.d.ts b/node_modules/react-select/dist/declarations/src/components/index.d.ts
index 5637fb8..4231bc6 100644
--- a/node_modules/react-select/dist/declarations/src/components/index.d.ts
+++ b/node_modules/react-select/dist/declarations/src/components/index.d.ts
@@ -1,15 +1,15 @@
 import { ComponentType } from 'react';
-import { ContainerProps, IndicatorsContainerProps, ValueContainerProps } from './containers';
-import { ClearIndicatorProps, CrossIconProps, DownChevronProps, DropdownIndicatorProps, IndicatorSeparatorProps, LoadingIndicatorProps } from './indicators';
-import { ControlProps } from './Control';
-import { GroupHeadingProps, GroupProps } from './Group';
-import { InputProps } from './Input';
-import { MenuListProps, MenuPortalProps, MenuProps, NoticeProps } from './Menu';
-import { MultiValueGenericProps, MultiValueProps, MultiValueRemove, MultiValueRemoveProps } from './MultiValue';
-import { OptionProps } from './Option';
-import { PlaceholderProps } from './Placeholder';
-import { SingleValueProps } from './SingleValue';
-import { GroupBase } from '../types';
+import { ContainerProps, IndicatorsContainerProps, ValueContainerProps } from './containers.js';
+import { ClearIndicatorProps, CrossIconProps, DownChevronProps, DropdownIndicatorProps, IndicatorSeparatorProps, LoadingIndicatorProps } from './indicators.js';
+import { ControlProps } from './Control.js';
+import { GroupHeadingProps, GroupProps } from './Group.js';
+import { InputProps } from './Input.js';
+import { MenuListProps, MenuPortalProps, MenuProps, NoticeProps } from './Menu.js';
+import { MultiValueGenericProps, MultiValueProps, MultiValueRemove, MultiValueRemoveProps } from './MultiValue.js';
+import { OptionProps } from './Option.js';
+import { PlaceholderProps } from './Placeholder.js';
+import { SingleValueProps } from './SingleValue.js';
+import { GroupBase } from '../types.js';
 export interface SelectComponents<Option, IsMulti extends boolean, Group extends GroupBase<Option>> {
     ClearIndicator: ComponentType<ClearIndicatorProps<Option, IsMulti, Group>>;
     Control: ComponentType<ControlProps<Option, IsMulti, Group>>;
diff --git a/node_modules/react-select/dist/declarations/src/components/indicators.d.ts b/node_modules/react-select/dist/declarations/src/components/indicators.d.ts
index 24e2a8e..e8c5b33 100644
--- a/node_modules/react-select/dist/declarations/src/components/indicators.d.ts
+++ b/node_modules/react-select/dist/declarations/src/components/indicators.d.ts
@@ -1,7 +1,7 @@
 /** @jsx jsx */
 import { ReactNode } from 'react';
 import { jsx } from '@emotion/react';
-import { CommonPropsAndClassName, CSSObjectWithLabel, GroupBase } from '../types';
+import { CommonPropsAndClassName, CSSObjectWithLabel, GroupBase } from '../types.js';
 export declare type CrossIconProps = JSX.IntrinsicElements['svg'] & {
     size?: number;
 };
diff --git a/node_modules/react-select/dist/declarations/src/creatable/index.d.ts b/node_modules/react-select/dist/declarations/src/creatable/index.d.ts
index b17a1ad..7a38b57 100644
--- a/node_modules/react-select/dist/declarations/src/creatable/index.d.ts
+++ b/node_modules/react-select/dist/declarations/src/creatable/index.d.ts
@@ -1,2 +1,2 @@
-export * from '../Creatable';
-export { default } from '../Creatable';
+export * from '../Creatable.js';
+export { default } from '../Creatable.js';
diff --git a/node_modules/react-select/dist/declarations/src/index.d.ts b/node_modules/react-select/dist/declarations/src/index.d.ts
index 3571ff8..414fa2f 100644
--- a/node_modules/react-select/dist/declarations/src/index.d.ts
+++ b/node_modules/react-select/dist/declarations/src/index.d.ts
@@ -1,28 +1,28 @@
-import Select from './Select';
-import type { GroupBase } from './types';
-import useStateManager from './useStateManager';
-export { default } from './stateManager';
-export { default as NonceProvider } from './NonceProvider';
-export { mergeStyles } from './styles';
-export { defaultTheme } from './theme';
-export { createFilter } from './filters';
-export { components } from './components';
+import Select from './Select.js';
+import type { GroupBase } from './types.js';
+import useStateManager from './useStateManager.js';
+export { default } from './stateManager.js';
+export { default as NonceProvider } from './NonceProvider.js';
+export { mergeStyles } from './styles.js';
+export { defaultTheme } from './theme.js';
+export { createFilter } from './filters.js';
+export { components } from './components.js';
 export declare type SelectInstance<Option = unknown, IsMulti extends boolean = false, Group extends GroupBase<Option> = GroupBase<Option>> = Select<Option, IsMulti, Group>;
-export type { StateManagerProps as Props } from './useStateManager';
+export type { StateManagerProps as Props } from './useStateManager.js';
 export { useStateManager };
-export type { SelectComponentsConfig } from './components';
-export type { ContainerProps, IndicatorsContainerProps, ValueContainerProps, } from './components/containers';
-export type { ControlProps } from './components/Control';
-export type { GroupProps, GroupHeadingProps } from './components/Group';
-export type { ClearIndicatorProps, DropdownIndicatorProps, IndicatorSeparatorProps, LoadingIndicatorProps, } from './components/indicators';
-export type { InputProps } from './components/Input';
-export type { MenuListProps, MenuProps, NoticeProps } from './components/Menu';
-export type { MultiValueGenericProps, MultiValueProps, MultiValueRemoveProps, } from './components/MultiValue';
-export type { OptionProps } from './components/Option';
-export type { PlaceholderProps } from './components/Placeholder';
-export type { SingleValueProps } from './components/SingleValue';
-export type { ThemeConfig } from './theme';
-export type { ClassNamesConfig, StylesConfig } from './styles';
-export * from './types';
-export type { OptionContext, GuidanceContext, AriaGuidanceProps, AriaOnChangeProps, AriaOnFilterProps, AriaOnFocusProps, AriaLiveMessages, AriaGuidance, AriaOnChange, AriaOnFilter, AriaOnFocus, } from './accessibility';
-export type { FormatOptionLabelContext, FormatOptionLabelMeta } from './Select';
+export type { SelectComponentsConfig } from './components.js';
+export type { ContainerProps, IndicatorsContainerProps, ValueContainerProps, } from './components/containers.js';
+export type { ControlProps } from './components/Control.js';
+export type { GroupProps, GroupHeadingProps } from './components/Group.js';
+export type { ClearIndicatorProps, DropdownIndicatorProps, IndicatorSeparatorProps, LoadingIndicatorProps, } from './components/indicators.js';
+export type { InputProps } from './components/Input.js';
+export type { MenuListProps, MenuProps, NoticeProps } from './components/Menu.js';
+export type { MultiValueGenericProps, MultiValueProps, MultiValueRemoveProps, } from './components/MultiValue.js';
+export type { OptionProps } from './components/Option.js';
+export type { PlaceholderProps } from './components/Placeholder.js';
+export type { SingleValueProps } from './components/SingleValue.js';
+export type { ThemeConfig } from './theme.js';
+export type { ClassNamesConfig, StylesConfig } from './styles.js';
+export * from './types.js';
+export type { OptionContext, GuidanceContext, AriaGuidanceProps, AriaOnChangeProps, AriaOnFilterProps, AriaOnFocusProps, AriaLiveMessages, AriaGuidance, AriaOnChange, AriaOnFilter, AriaOnFocus, } from './accessibility.js';
+export type { FormatOptionLabelContext, FormatOptionLabelMeta } from './Select.js';
diff --git a/node_modules/react-select/dist/declarations/src/internal/index.d.ts b/node_modules/react-select/dist/declarations/src/internal/index.d.ts
index 7782342..a9423d1 100644
--- a/node_modules/react-select/dist/declarations/src/internal/index.d.ts
+++ b/node_modules/react-select/dist/declarations/src/internal/index.d.ts
@@ -1,4 +1,4 @@
-export { default as A11yText } from './A11yText';
-export { default as DummyInput } from './DummyInput';
-export { default as ScrollManager } from './ScrollManager';
-export { default as RequiredInput } from './RequiredInput';
+export { default as A11yText } from './A11yText.js';
+export { default as DummyInput } from './DummyInput.js';
+export { default as ScrollManager } from './ScrollManager.js';
+export { default as RequiredInput } from './RequiredInput.js';
diff --git a/node_modules/react-select/dist/declarations/src/stateManager.d.ts b/node_modules/react-select/dist/declarations/src/stateManager.d.ts
index c00d4af..5e03f3b 100644
--- a/node_modules/react-select/dist/declarations/src/stateManager.d.ts
+++ b/node_modules/react-select/dist/declarations/src/stateManager.d.ts
@@ -1,7 +1,7 @@
 import { ReactElement, RefAttributes } from 'react';
-import { GroupBase } from './types';
-import Select from './Select';
-import type { StateManagerProps } from './useStateManager';
+import { GroupBase } from './types.js';
+import Select from './Select.js';
+import type { StateManagerProps } from './useStateManager.js';
 export type { StateManagerProps };
 declare type StateManagedSelect = <Option = unknown, IsMulti extends boolean = false, Group extends GroupBase<Option> = GroupBase<Option>>(props: StateManagerProps<Option, IsMulti, Group> & RefAttributes<Select<Option, IsMulti, Group>>) => ReactElement;
 declare const StateManagedSelect: StateManagedSelect;
diff --git a/node_modules/react-select/dist/declarations/src/styles.d.ts b/node_modules/react-select/dist/declarations/src/styles.d.ts
index 6ebc274..b283869 100644
--- a/node_modules/react-select/dist/declarations/src/styles.d.ts
+++ b/node_modules/react-select/dist/declarations/src/styles.d.ts
@@ -1,14 +1,14 @@
-import { ContainerProps, IndicatorsContainerProps, ValueContainerProps } from './components/containers';
-import { ControlProps } from './components/Control';
-import { GroupHeadingProps, GroupProps } from './components/Group';
-import { ClearIndicatorProps, DropdownIndicatorProps, IndicatorSeparatorProps, LoadingIndicatorProps } from './components/indicators';
-import { InputProps } from './components/Input';
-import { PlaceholderProps } from './components/Placeholder';
-import { OptionProps } from './components/Option';
-import { NoticeProps, MenuProps, MenuListProps, PortalStyleArgs } from './components/Menu';
-import { SingleValueProps } from './components/SingleValue';
-import { MultiValueProps } from './components/MultiValue';
-import { CSSObjectWithLabel, GroupBase } from './types';
+import { ContainerProps, IndicatorsContainerProps, ValueContainerProps } from './components/containers.js';
+import { ControlProps } from './components/Control.js';
+import { GroupHeadingProps, GroupProps } from './components/Group.js';
+import { ClearIndicatorProps, DropdownIndicatorProps, IndicatorSeparatorProps, LoadingIndicatorProps } from './components/indicators.js';
+import { InputProps } from './components/Input.js';
+import { PlaceholderProps } from './components/Placeholder.js';
+import { OptionProps } from './components/Option.js';
+import { NoticeProps, MenuProps, MenuListProps, PortalStyleArgs } from './components/Menu.js';
+import { SingleValueProps } from './components/SingleValue.js';
+import { MultiValueProps } from './components/MultiValue.js';
+import { CSSObjectWithLabel, GroupBase } from './types.js';
 export interface StylesProps<Option, IsMulti extends boolean, Group extends GroupBase<Option>> {
     clearIndicator: ClearIndicatorProps<Option, IsMulti, Group>;
     container: ContainerProps<Option, IsMulti, Group>;
diff --git a/node_modules/react-select/dist/declarations/src/theme.d.ts b/node_modules/react-select/dist/declarations/src/theme.d.ts
index cc91406..c7f05d3 100644
--- a/node_modules/react-select/dist/declarations/src/theme.d.ts
+++ b/node_modules/react-select/dist/declarations/src/theme.d.ts
@@ -1,4 +1,4 @@
-import { Theme } from './types';
+import { Theme } from './types.js';
 export declare const colors: {
     primary: string;
     primary75: string;
diff --git a/node_modules/react-select/dist/declarations/src/types.d.ts b/node_modules/react-select/dist/declarations/src/types.d.ts
index 295a26b..0ff4fc5 100644
--- a/node_modules/react-select/dist/declarations/src/types.d.ts
+++ b/node_modules/react-select/dist/declarations/src/types.d.ts
@@ -1,6 +1,6 @@
 import { CSSObject } from '@emotion/react';
-import { Props } from './Select';
-import { StylesProps } from './styles';
+import { Props } from './Select.js';
+import { StylesProps } from './styles.js';
 export interface GroupBase<Option> {
     readonly options: readonly Option[];
     readonly label?: string;
diff --git a/node_modules/react-select/dist/declarations/src/useAsync.d.ts b/node_modules/react-select/dist/declarations/src/useAsync.d.ts
index 4daeba6..31464cf 100644
--- a/node_modules/react-select/dist/declarations/src/useAsync.d.ts
+++ b/node_modules/react-select/dist/declarations/src/useAsync.d.ts
@@ -1,5 +1,5 @@
-import { StateManagerProps } from './useStateManager';
-import { GroupBase, OptionsOrGroups } from './types';
+import { StateManagerProps } from './useStateManager.js';
+import { GroupBase, OptionsOrGroups } from './types.js';
 declare type AsyncManagedPropKeys = 'options' | 'isLoading' | 'onInputChange' | 'filterOption';
 export interface AsyncAdditionalProps<Option, Group extends GroupBase<Option>> {
     /**
diff --git a/node_modules/react-select/dist/declarations/src/useCreatable.d.ts b/node_modules/react-select/dist/declarations/src/useCreatable.d.ts
index b4f4f20..d4d65cd 100644
--- a/node_modules/react-select/dist/declarations/src/useCreatable.d.ts
+++ b/node_modules/react-select/dist/declarations/src/useCreatable.d.ts
@@ -1,6 +1,6 @@
 import { ReactNode } from 'react';
-import { PublicBaseSelectProps } from './Select';
-import { GetOptionLabel, GetOptionValue, GroupBase, Options, OptionsOrGroups } from './types';
+import { PublicBaseSelectProps } from './Select.js';
+import { GetOptionLabel, GetOptionValue, GroupBase, Options, OptionsOrGroups } from './types.js';
 export interface Accessors<Option> {
     getOptionValue: GetOptionValue<Option>;
     getOptionLabel: GetOptionLabel<Option>;
diff --git a/node_modules/react-select/dist/declarations/src/useStateManager.d.ts b/node_modules/react-select/dist/declarations/src/useStateManager.d.ts
index 2ac0bd9..583027e 100644
--- a/node_modules/react-select/dist/declarations/src/useStateManager.d.ts
+++ b/node_modules/react-select/dist/declarations/src/useStateManager.d.ts
@@ -1,5 +1,5 @@
-import { GroupBase, PropsValue } from './types';
-import { PublicBaseSelectProps } from './Select';
+import { GroupBase, PropsValue } from './types.js';
+import { PublicBaseSelectProps } from './Select.js';
 declare type StateManagedPropKeys = 'inputValue' | 'menuIsOpen' | 'onChange' | 'onInputChange' | 'onMenuClose' | 'onMenuOpen' | 'value';
 declare type SelectPropsWithOptionalStateManagedProps<Option, IsMulti extends boolean, Group extends GroupBase<Option>> = Omit<PublicBaseSelectProps<Option, IsMulti, Group>, StateManagedPropKeys> & Partial<PublicBaseSelectProps<Option, IsMulti, Group>>;
 export interface StateManagerAdditionalProps<Option> {
diff --git a/node_modules/react-select/dist/declarations/src/utils.d.ts b/node_modules/react-select/dist/declarations/src/utils.d.ts
index 552535f..e3e85b2 100644
--- a/node_modules/react-select/dist/declarations/src/utils.d.ts
+++ b/node_modules/react-select/dist/declarations/src/utils.d.ts
@@ -1,5 +1,5 @@
-import type { StylesProps } from './styles';
-import type { ClassNamesState, CommonPropsAndClassName, GroupBase, InputActionMeta, MultiValue, OnChangeValue, Options, PropsValue, SingleValue } from './types';
+import type { StylesProps } from './styles.js';
+import type { ClassNamesState, CommonPropsAndClassName, GroupBase, InputActionMeta, MultiValue, OnChangeValue, Options, PropsValue, SingleValue } from './types.js';
 export declare const noop: () => void;
 export declare const emptyString: () => string;
 export declare function classNames(prefix?: string | null, state?: ClassNamesState, ...classNameList: string[]): string;
diff --git a/node_modules/react-select/dist/react-select.cjs.d.ts b/node_modules/react-select/dist/react-select.cjs.d.ts
index d4647d2..9aa3173 100644
--- a/node_modules/react-select/dist/react-select.cjs.d.ts
+++ b/node_modules/react-select/dist/react-select.cjs.d.ts
@@ -1,2 +1,2 @@
-export * from "./declarations/src/index";
-export { default } from "./declarations/src/index";
+export * from "./declarations/src/index.js";
+export { default } from "./declarations/src/index.js";
